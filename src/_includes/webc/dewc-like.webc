<div id="likeme" webc:root="override">
  <button id="likesbutton" class="button"><span class="visually-hidden">like this</span></button>
  <output id="likes" 
    aria-labelled-by="likebutton"
    data-hx-swap="outerHTML swap:0.3s"
    data-hx-indicator="#likeme" 
    data-hx-target="#likeme" 
    data-hx-select="#likeme" 
    data-hx-trigger="load" 
    data-hx-get="/likes.html"
    data-hx-headers="javascript:uniqueness: uniqueId()">
    <span class="visually-hidden">0 likes</span>
  </output>
</div>

<script>
  function uniqueId(){
    let uniqueId = localStorage.getItem('uniqueId');
    
    if(!uniqueId){
      uniqueId = crypto.randomUUID();
      localStorage.setItem('uniqueId', uniqueId);
    }
    return uniqueId
  }

  document.body.addEventListener('htmx:afterSwap', function(evt) {

    const heart = document.getElementById('likesbutton');

    if(evt.detail.requestConfig.verb === "post"){
      
      // Add event listener for "mouseenter" event
      heart.addEventListener("mouseleave", (event) => {
        // Your event handling code here
        heart.classList.add('hoverfill')
      });
    }else{
      setTimeout(()=>{
        heart.classList.add('hoverfill');
      },300);


      //heart.classList.add('hoverfill');
      // heart.classList.add('hoverfill');
      // heart.addEventListener("mouseenter", (event) => {
      //   // Your event handling code here
      //   heart.classList.add('hoverfill');
      // });
    }
    
  });

  
</script>
<style>
  @keyframes fadeIn {
    0% {
        opacity: 0;
        /* transform: translateY(0.2em); */
      }
    100% {
      opacity: 1;
      /* transform: translateY(0); */
    }
  }

  @keyframes fadeOut {
    0% {
        opacity: 1;
        scale: 0.9
      }
    100% {
      opacity: 0;
      scale: 1.2;
    }
  }

  @keyframes pulse {
    0% {
        opacity: 0;
        --pixelwidth: 0.05em;
      }
    100% {
      opacity: 0.6;
      --pixelwidth: 0.15em;
    }
  }

	#likeme {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  #likeme output{
    color: var(--darkgrey);
    min-height: 1.2em;
    width: 100%;
    display: flex;
    text-align: center;
    align-items: center;
    justify-content: center;
    pointer-events: none;
    font-weight: 400;
    font-family: monospace;
    transition: 0.3s all;
    transform: translateY(0);
  }

  #likeme.htmx-request output,
  #likeme.htmx-swapping output{
    opacity: 0.3;
    /* transform: translateY(8px); */
  }

  #likeme.htmx-request::before,
  #likeme.htmx-swapping::before{
    /* margin-left: 0.08em;
    transform: translateY(0.5em);  */
    z-index: 99;
    --pixelwidth: 0.152em;
    --gridwidth: 0.15em;
    font-size: 16px;
    width: 2.4em;
    height: 2.4em;

    content: "";
    position: absolute;
    transition: 0.3s opacity;
    animation: pulse 1s alternate infinite;

    background: 
    /* heart */
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 0) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 0) / calc(var(--pixelwidth) * 4) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 8) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 9) calc(var(--gridwidth) * 0) / calc(var(--pixelwidth) * 4) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 13) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 14) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 13) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 8) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 3) calc(var(--gridwidth) * 9) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 4) calc(var(--gridwidth) * 10) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 5) calc(var(--gridwidth) * 11) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 12) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 13) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 8) calc(var(--gridwidth) * 12) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 9) calc(var(--gridwidth) * 11) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 10) calc(var(--gridwidth) * 10) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 11) calc(var(--gridwidth) * 9) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 12) calc(var(--gridwidth) * 8) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1);    

    background-repeat: no-repeat;
    
  }

  #likeme.htmx-swapping::before{
    opacity: 0;
  }

  /* #likeme > :is(button, output){
    opacity: 0;
  } */

  .fadeIn > :is(button, output){
    /* animation: fadeIn 0.3s both; */
  }


  #likeme .button{
    --pixelwidth: 0.152em;
    --gridwidth: 0.15em;
    --offset: 0em;
    font-size: 16px;
    width: 2.4em;
    height: 2.4em;
    cursor: pointer;

    background: 
    /* heart */
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 0) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 0) / calc(var(--pixelwidth) * 4) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 8) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 9) calc(var(--gridwidth) * 0) / calc(var(--pixelwidth) * 4) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 13) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 14) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 13) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 8) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 3) calc(var(--gridwidth) * 9) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 4) calc(var(--gridwidth) * 10) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 5) calc(var(--gridwidth) * 11) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 12) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 13) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 8) calc(var(--gridwidth) * 12) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 9) calc(var(--gridwidth) * 11) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 10) calc(var(--gridwidth) * 10) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 11) calc(var(--gridwidth) * 9) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 12) calc(var(--gridwidth) * 8) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1);    

    background-repeat: no-repeat;
    border: none;
    transition: 0.3s transform, 0.3s opacity;
  }

  #likeme.done .button {
    /* --plum: var(--lightgrey);
    --red: var(--grey);
    --mauve: var(--darkgrey); */ 

    animation: fadeIn 0.3s forwards;
    background:  /* highlight */
    linear-gradient(var(--plum), var(--plum)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 3) / var(--pixelwidth) calc(var(--gridwidth) * 2),
    linear-gradient(var(--plum), var(--plum)) calc(var(--gridwidth) * 3) calc(var(--gridwidth) * 2) / var(--pixelwidth) calc(var(--gridwidth) * 2),
    linear-gradient(var(--plum), var(--plum)) calc(var(--gridwidth) * 4) calc(var(--gridwidth) * 2) / var(--pixelwidth) calc(var(--gridwidth) * 1),

    /* heart */
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 0) calc(var(--gridwidth) * 2) / var(--pixelwidth) calc(var(--gridwidth) * 5), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 1) / var(--pixelwidth) calc(var(--gridwidth) * 7),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 0) / var(--pixelwidth) calc(var(--gridwidth) * 9), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 3) calc(var(--gridwidth) * 0) / var(--pixelwidth) calc(var(--gridwidth) * 10), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 4) calc(var(--gridwidth) * 0) / var(--pixelwidth) calc(var(--gridwidth) * 11), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 5) calc(var(--gridwidth) * 0) / var(--pixelwidth) calc(var(--gridwidth) * 12),  
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 1) / var(--pixelwidth) calc(var(--gridwidth) * 12), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 2) / var(--pixelwidth) calc(var(--gridwidth) * 12), 
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 8 + var(--offset)) calc(var(--gridwidth) * 1 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 12),
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 9 + var(--offset)) calc(var(--gridwidth) * 0 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 12),
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 10 + var(--offset)) calc(var(--gridwidth) * 0 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 11),
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 11 + var(--offset)) calc(var(--gridwidth) * 0 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 10),
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 12 + var(--offset)) calc(var(--gridwidth) * 0 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 9),
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 13 + var(--offset)) calc(var(--gridwidth) * 1 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 7),
    linear-gradient(2deg, var(--red), var(--mauve)) calc(var(--gridwidth) * 14 + var(--offset)) calc(var(--gridwidth) * 2 + var(--offset)) / var(--pixelwidth) calc(var(--gridwidth) * 5);

    background-repeat: no-repeat;
  }

  /* #likeme.done .button:hover{
    --offset:0.15em;
    transition: 0.3s all;
  } */

  #likeme.done .button::before,
  #likeme.done .button::after{
    content: "";
    position: absolute;
    width: 150%;
    height: 75%;
    left: -32%;
    top: -4px;
    background: /* heart */ linear-gradient(45deg, var(--red-0) 30%, var(--red) 38%, var(--red-0) 40%) -3px -16px / 12px 30px, linear-gradient(0deg, var(--red-0) 27%, var(--red) 38%, var(--red-0) 40%) -2px -5px / 12px 30px, linear-gradient(-45deg, var(--red-0) 30%, var(--red) 38%, var(--red-0) 40%) -3px 3px / 12px 30px;
    background-repeat: no-repeat;
    animation: fadeOut 0.6s forwards ease-out;
    pointer-events: none;
  }

  #likeme.done .button::after{
    transform: rotate(180deg) translateX(-3px) translateY(11px);
  }

  #likeme:not(.done) .button.hoverfill:hover{
    transition: 0.4s all cubic-bezier(1, -0.44, 0.61, 1.52);
    background: /* heart */
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 0) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5), 
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 1) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 0) / calc(var(--pixelwidth) * 4) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 8) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 9) calc(var(--gridwidth) * 0) / calc(var(--pixelwidth) * 4) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 13) calc(var(--gridwidth) * 1) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 14) calc(var(--gridwidth) * 2) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 13) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 1),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 2) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 2),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 3) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 3),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 4) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 4),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 5) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 6) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 6),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 7) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 7),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 8) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 6),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 9) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 5),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 10) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 4),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 11) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 3),
    linear-gradient(var(--red), var(--mauve)) calc(var(--gridwidth) * 12) calc(var(--gridwidth) * 7) / calc(var(--pixelwidth) * 1) calc(var(--gridwidth) * 2);    

    background-repeat: no-repeat;
  }
</style>
