import { oakAdapter, etaEngine, viewEngine, Application, Router, staticFileRoutes, Status } from "./deps.ts";
import { getLikes, updateLikes } from "./service.ts";

const app = new Application();

app.use(
  viewEngine(oakAdapter, etaEngine, {
    viewRoot: "./server/views"
  })
);

async function updateLikesHandler(ctx: any) {
  const likes = await updateLikes(ctx);
  ctx.render("likes-done.html", {likes: likes});
}

async function getLikesHandler(ctx: any) {
  const {likes, alreadyLiked} = await getLikes(ctx);

  if(alreadyLiked===true){
    ctx.render("likes-done.html", {likes: likes});
  }else{
    ctx.render("likes.html", {likes: likes});
  }
}

async function getUnLikesHandler(ctx: any) {
  const likes = await updateLikes(ctx);
  ctx.render("likes.html", {likes: likes});
}

const router = new Router();

router
  .get("/likes.html", getLikesHandler)
  .post("/unlikes.html", getUnLikesHandler)
  .post("/likes.html", updateLikesHandler)

// checks for static routes (real html files generated by 11ty in the _site directory) and uses them if they exist
app.use(staticFileRoutes);

app.use(router.routes());

app.use(router.allowedMethods());

app.use((ctx) => {
  ctx.response.body = "nuppers";
  ctx.response.status = Status.NotFound;
});

app.addEventListener("listen", () => {
  console.log("ğŸ’–Server started");
});

await app.listen({ port: 8000 });
